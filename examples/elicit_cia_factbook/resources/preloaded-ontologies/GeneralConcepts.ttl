@prefix : <http://ontology.causeex.com/ontology/odps/GeneralConcepts#> .
@prefix cco: <http://www.ontologyrepository.com/CommonCoreOntologies/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix general: <http://ontology.causeex.com/ontology/odps/GeneralConcepts#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://ontology.causeex.com/ontology/odps/GeneralConcepts> rdf:type owl:Ontology ;
    dcterms:description "Ontology defining general concepts used in the CauseEx program."@en ;
    dcterms:created "February 25, 2018"^^xsd:string ;
    dcterms:modified "October 27, 2018"^^xsd:string ;
    rdfs:comment """October 27th 2018 revisions:
                    Corrected the regex for IPV4 and V6Address, and beginning/ending_hour_and_minute/month_and_day.
                    Added the concepts of RecurrencePattern, DayOfWeek and RecurrenceInterval, and their related properties 
                      (recurs, has_recurrence_interval, beginning/ending_month_and_day, beginning/ending_hour_and_minute, has_day_of_week, 
                      week/day_of_month and/or separation_interval).
                    Added the LocationDetails class and the related_location property. Modified the ranges of the located_at/near properties.
                    Added IndividualClassification and is_classified_individual and is_possible_class_ref or 
                      is_positive/negative_class_ref.
                    Added a Cryptocurrency class.
                    Moved the individual currencies missed from CCO to their own ontology (CurrencyUnits).
                    Commented out references to cco: classes that are only used in equivalencies and sub-class declarations. 
                    Added the concept of a geopolitical Territory. 
                    Added the relevant CCO imports versus adding all.
                    Removed ontology history older than 6 months.
                   September 24th 2018 revisions:
                     Removed sub-property declaration for has_member and moved it to has_component (has_component is a 
                       sub-property of has_member, not vice versa).
                     Changed generic to be a Functional, Datatype property (was incorrectly defined as a Class).
                     Changed all rdfs:Literal datatypes to xsd:string, all xsd:doubles to xsd:decimal or xsd:double, and
                       all xsd:int to xsd:integer.
                     Updated the description for associated_monetary_amount and has_currency.
                   June 27th 2018 revisions:
                     Added the class :ShortenedHierarchy and subclassed cco:CellularTelecommunicationNetwork and 
                       cco:ControlledAccessHighway from it.
                     Added cco:SeaLevel to the subclasses of PhysicalLocation. 
                     Removed cco:GeospatialRegion from the subclasses of PhysicalLocation and instead listed cco:Continent,
                       cco:Subcontinent, cco:GeopoliticalEntity and cco:GeopoliticalEntityPart.
                   May 31st 2018 revisions:
                     Added sub-classing of cco:GeospatialRegion, cco:Facility, ... from PhysicalLocation.
                     Moved the range definition for associated_monetary_amount to the TimeSeriesAndMeasurements ontology.
                     Added several missing currency units (missing from CCO).
                     Added a sub-class of PhysicalLocation, PathRoadOrRoute, and a sub-class of VirtualLocation, Border.
                     Removed the domain definition for has_currency since it can be a MonetaryAmount, meas:TimeSeries or meas:ReportedValue.
                     Removed BoundingCoordinate since it is simply a PhysicalLocation with a latitude/longitude.
                     Added recommendations on mapping low-medium-high confidence and weak-strong strength values to the 0-1 scale of 
                       numeric_confidence and numeric_credibility.
                     Removed the largest/smallest_possible_measurement_value properties, which should have been deleted in the 
                       April 20th revisions.
                     Changed the range of amount and largest/smallest_possible_amount to be doubles or decimals.
                   April 20th 2018 revisions:
                     Extended the range definition of involves_goods_or_property to include PhysicalLocation.
                     Removed MeasurementAmount and its related properties. Is replaced with the semantics of the 
                       TimeSeriesAndMeasurements ontology."""@en ;
#   owl:imports <http://www.ontologyrepository.com/CommonCoreOntologies/Mid/AllCoreOntology> ;
    owl:imports <http://www.ontologyrepository.com/CommonCoreOntologies/Mid/ArtifactOntology> ;
    owl:imports <http://www.ontologyrepository.com/CommonCoreOntologies/Mid/CurrencyUnitOntology>;
    owl:imports <http://www.ontologyrepository.com/CommonCoreOntologies/Mid/GeospatialOntology> ;
    owl:imports <http://purl.org/dc/terms> ;
    owl:versionInfo "Version 1.4"^^xsd:string .


#################################################################
#    Object Properties
#################################################################

:associated_monetary_amount a owl:ObjectProperty, owl:FunctionalProperty ;
    rdfs:label "associated monetary amount"@en ;
    rdfs:comment "Indicates that monies quantify or were/are involved in/associated with an individual. For example, monies may be received in a bank deposit transaction or specify the amount to be received yearly as a job salary. The monetary details are specified using the properties (has_currency and the several 'amount'-related properties) of the MonetaryAmount individual."@en ;
    rdfs:comment "The domain definition for associated_monetary_amount is defined in the TimeSeriesAndMeasurements ontology, since it is a union of general:MonetaryAmount and other classes defined in that ontology."@en ;
    rdfs:range :MonetaryAmount .

:has_bounding_coordinate a owl:ObjectProperty ;
    rdfs:label "has bounding coordinate"@en ;
    rdfs:comment "Indicates that a BoundingBox is delimited by all of the referenced PhysicalLocations (which in turn have properties, latitude and longitude)."@en ;
    rdfs:domain :BoundingBox ;
    rdfs:range :PhysicalLocation ;
    rdfs:subPropertyOf general:has_component .

:has_component a owl:ObjectProperty, owl:IrreflexiveProperty, owl:TransitiveProperty ;
    rdfs:label "has component"@en ;
    rdfs:comment "Indicates a whole-part relationship between the 'whole'/domain referent and the 'part'/range referent."@en ;
    rdfs:subPropertyOf :has_member .

:has_currency a owl:ObjectProperty, owl:FunctionalProperty ;
    rdfs:label "has currency"@en ;
    rdfs:comment "Indicates the currency of the 'amount' specified for a MonetaryAmount individual. The currency is specified as one of the individuals in the CCO CurrencyUnit ontology."@en ;
    rdfs:comment "The domain definition for has_currency is defined in the TimeSeriesAndMeasurements ontology, since it is a union of general:MonetaryAmount and other classes defined in that ontology."@en ;
    rdfs:range cco:CurrencyUnit .

:has_day_of_week a owl:ObjectProperty ;
    rdfs:label "has day of week"@en ;
    rdfs:comment "Indicates a specific day of the week (Sunday, Monday, ..., Saturday) for a RecurrencePattern individual."@en ;
    rdfs:domain :RecurrencePattern ;
    rdfs:range :DayOfWeek .

:has_identifier a owl:ObjectProperty ;
    rdfs:label "has identifier"@en ;
    rdfs:range :Identifier .

:has_member a owl:ObjectProperty, owl:IrreflexiveProperty, owl:TransitiveProperty ;
    rdfs:label "has member"@en ;
    rdfs:comment "Indicates membership in a Collection."@en ;
    rdfs:domain :Collection .

:has_recurrence_interval a owl:ObjectProperty, owl:FunctionalProperty ;
    rdfs:label "has recurrence interval"@en ;
    rdfs:comment "Indicates a specific interval (minutes, hourly, daily, weekly, monthly or yearly) for a RecurrencePattern individual."@en ;
    rdfs:domain :RecurrencePattern ;
    rdfs:range :RecurrenceInterval .

:involves_goods_or_property a owl:ObjectProperty ;
    rdfs:label "involves goods or property"@en ;
    rdfs:comment "Indicates that the referenced entity involves or is involved with (e.g., transfers, destroys, purchases, manufactures, distributes, ...) some goods or property. The type of goods or property are defined by the CCO Artifact ontology or by sub-classes of PhysicalLocation."@en ;
    rdfs:comment "As another example, a surrender of territory by one general to another would be defined as a SurrenderOrYielding event, by the 'active' surrendering general to the 'affected' general, using 'involves_goods_or_property' to indicate the territory that was surrendered and using 'located_at' to define where the surrender Event occurred. As another example, if there was a protest to denounce firearms, then that could be modeled as a 'DemonstrationOrProtest' Event whose 'topic' was a 'DisapprovalOrDenunciation' Event where the latter used 'involves_goods_or_property' to reference a cco:Firearm artifact with a general:generic property of 'true'."@en; 
    rdfs:range [ a owl:Class ;
                 owl:unionOf ( :PhysicalLocation cco:Artifact ) ] .

:is_classified_individual a owl:ObjectProperty, owl:IrreflexiveProperty ;
    rdfs:label "is classified individual"@en ;
    rdfs:comment "The semantics of IndividualClassification provide an alternative to simply classifying an individual using a single class or a union of possible classes. It is used when there is some ambiguity or uncertainty regarding the explicit classification to be used. The ambiguity may be due to a lack of information, or because the semantics actually overlap several different sub-classes (as may occur with TimeSeries data or other CollectionsOfEvents). Using IndividualClassification, an individual may be classified as one of a number of different types, with different confidences."@en ;
    rdfs:comment "The individual whose semantics are ambiguous would be formally classified using a generic event:Event, event:Actor or general:Location type and would be referenced by two or more IndividualClassification instances (using the is_classified_individual property). The possible, more specific classifications would be referenced using the is_possible_classification_ref property or its sub-properties, is_positive_classification_ref and is_negative_classification_ref."@en ;
    rdfs:domain :IndividualClassification .

:is_negative_classification_ref a owl:ObjectProperty ;
    rdfs:label "is negative classification ref"@en ;
    rdfs:comment "The semantics of IndividualClassification provide an alternative to simply classifying an individual using a single class or a union of possible classes. It is used when there is some ambiguity or uncertainty regarding the explicit classification to be used. The ambiguity may be due to a lack of information, or because the semantics actually overlap several different sub-classes (as may occur with TimeSeries data or other CollectionsOfEvents). Using IndividualClassification, an individual may be classified as one of a number of different types, with different confidences."@en ;
    rdfs:comment "The individual whose semantics are ambiguous would be classified as a generic event:Event, event:Actor or general:Location type and would be referenced by two or more IndividualClassification instances (using the is_classified_individual property). The possible, more specific classifications that exist for the individual would be referenced using the is_possible_classification_ref property or its sub-properties, is_positive_classification_ref and is_negative_classification_ref."@en ;
    rdfs:comment "The value of the is_negative_classification_ref is the IRI of a possible classification of the individual - one that negates the semantics. An example is a TimeSeries reporting 'investment in water and sanitation with private participation'. This might be classified as supporting/negating any of the following Event sub-classes, PromotionOfWaterSanitationAndHygiene, WaterSecurity, WaterInsecurity, SanitaryConditions, UnsanitaryConditions, ContaminatedWater, WaterManagementLandUse or InfrastructureAndUtilities, depending on the need. In this case, not all of the relationships are positive/supporting. For example, the TimeSeries ClassificationIndividual would reference WaterInsecurity, UnsanitaryConditions and ContaminatedWater using the is_negative_classification_ref property, while the other classes would be referenced using is_positive_classification_ref. Each possible classification could have its own confidence."@en ;
    rdfs:comment "Class IRIs are provided using this property, and OWL puning is assumed (meaning that the class IRI is treated as a individual of the 'metaconcept' of  the class)."@en ;
    rdfs:domain :IndividualClassification ;
    rdfs:subPropertyOf :is_possible_classification_ref .

:is_positive_classification_ref a owl:ObjectProperty ;
    rdfs:label "is positive classification ref"@en ;
    rdfs:comment "The semantics of IndividualClassification provide an alternative to simply classifying an individual using a single class or a union of possible classes. It is used when there is some ambiguity or uncertainty regarding the explicit classification to be used. The ambiguity may be due to a lack of information, or because the semantics actually overlap several different sub-classes (as may occur with TimeSeries data or other CollectionsOfEvents). Using IndividualClassification, an individual may be classified as one of a number of different types, with different confidences."@en ;
    rdfs:comment "The individual whose semantics are ambiguous would be classified as a generic event:Event, event:Actor or general:Location type and would be referenced by two or more IndividualClassification instances (using the is_classified_individual property). The possible, more specific classifications that exist for the individual would be referenced using the is_possible_classification_ref property or its sub-properties, is_positive_classification_ref and is_negative_classification_ref."@en ;
    rdfs:comment "The value of the is_positive_classification_ref is the IRI of a possible classification of the individual - one that aligns with the semantics. An example is a TimeSeries reporting 'investment in water and sanitation with private participation'. This might be classified as supporting/negating any of the following Event sub-classes, PromotionOfWaterSanitationAndHygiene, WaterSecurity, WaterInsecurity, SanitaryConditions, UnsanitaryConditions, ContaminatedWater, WaterManagementLandUse or InfrastructureAndUtilities, depending on the need. In this case, not all of the relationships are positive/supporting. For example, the TimeSeries ClassificationIndividual would reference WaterInsecurity, UnsanitaryConditions and ContaminatedWater using the is_negative_classification_ref property, while the other classes would be referenced using is_positive_classification_ref. Each possible classification could have its own confidence."@en ;
    rdfs:comment "Class IRIs are provided using this property, and OWL puning is assumed (meaning that the class IRI is treated as a individual of the 'metaconcept' of  the class)."@en ;
    rdfs:domain :IndividualClassification ;
    rdfs:subPropertyOf :is_possible_classification_ref .

:is_possible_classification_ref a owl:ObjectProperty ;
    rdfs:label "is possible classification ref"@en ;
    rdfs:comment "The semantics of IndividualClassification provide an alternative to simply classifying an individual using a single class or a union of possible classes. It is used when there is some ambiguity or uncertainty regarding the explicit classification to be used. The ambiguity may be due to a lack of information, or because the semantics actually overlap several different sub-classes (as may occur with TimeSeries data or other CollectionsOfEvents). Using IndividualClassification, an individual may be classified as one of a number of different types, with different confidences."@en ;
    rdfs:comment "The individual whose semantics are ambiguous would be classified as a generic event:Event, event:Actor or general:Location type and would be referenced by two or more IndividualClassification instances (using the is_classified_individual property). The possible, more specific classifications that exist for the individual would be referenced using the is_possible_classification_ref property or its sub-properties, is_positive_classification_ref and is_negative_classification_ref."@en ;
    rdfs:comment "The value of the is_possible_classification_ref is the IRI of a possible classification of the individual. An example is the location of a GPE identified as 'Niger'. That location could be the country of Niger, or it could be the state of Niger in Nigeria. This could be indicated by classifying the Niger individual as a general:PhysicalLocation and defining two IndividualClassification instances (for example, :CountryOfNigerClassification and :CityOfNigerNigeriaClassification). The latter two individuals would reference the Niger individual using the is_classified_individual property. The first would also reference cco:Country using the is_possible_classification_ref and the second would reference cco:State using that property. There might be two different confidences assigned to these, based on other information in the text. The confidences would be associated with the IndividualClassification instances using general:numeric_confidence."@en ;
    rdfs:comment "Class IRIs are provided using this property, and OWL puning is assumed (meaning that the class IRI is treated as a individual of the 'metaconcept' of  the class)."@en ;
    rdfs:domain :IndividualClassification .

:located_at a owl:ObjectProperty, owl:IrreflexiveProperty, owl:TransitiveProperty ;
    rdfs:label "located at"@en ;
    rdfs:comment "Indicates that an individual (such as a geopolitical entity or Event) is at a particular place/geospatial position, or is inferred to be at a Location identified by the related_location property of a LocationDetails individual."@en ; 
    rdfs:range [ a owl:Class ;
                 owl:unionOf ( :Location :LocationDetails ) ] .

:located_near a owl:ObjectProperty, owl:IrreflexiveProperty ;
    rdfs:label "located near"@en ;
    rdfs:comment "Indicates that an individual (such as a geopolitical entity or Event) is positioned near a particular place/geospatial position, or is inferred to be near a Location identified by the related_location property of a LocationDetails individual."@en ; 
    rdfs:range [ a owl:Class ;
                 owl:unionOf ( :Location :LocationDetails ) ] .

:recurs a owl:ObjectProperty, owl:IrreflexiveProperty ;
    rdfs:label "recurs"@en ;
    rdfs:comment "Relates an individual, which may have earliest/latest_possible_start/end_time properties, with an instance of RecurrencePattern. The latter refines the definition of time from anything between the earliest and latest times, to a specific pattern within that timeframe. The pattern is based on a closed enumeration identifying either minutes, hourly, daily, weekly, monthly or yearly recurrence (indicated by the RecurrenceInterval), further constrained by the has_day_of_week, beginning/ending_month_and_day, beginning/ending_hour_and_minute, day/week_of_month, and/or separation_interval properties."@en ;
    rdfs:range :RecurrencePattern .

:related_location a owl:ObjectProperty, owl:FunctionalProperty ;
    rdfs:label "related location"@en ;
    rdfs:comment "Identifies the specific location (defined by individuals whose type is a sub-class of :Location) of a LocationDetails individual."@en ;
    rdfs:domain :LocationDetails ;
    rdfs:range :Location .

:unifies a owl:ObjectProperty, owl:IrreflexiveProperty ;
    rdfs:label "unifies"@en ;
    rdfs:comment "Relates two individuals, identifying that the subject is an amalgamation/unification of all the information of any individual referenced by this predicate. This property is used when information about an individual is scattered across various sources. Only by reasoning/logic can one determine that the same individual is described by each source. The subject individual is the logical result of defining 'owl:sameAs' relationships between each of the individuals referenced as objects."@en .


#################################################################
#    Data Properties
#################################################################

:altitude_lower_bound_meters a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "lower bound of an altitude range (in meters)"@en ;
    rdfs:comment "An xsd:decimal defining the lower bound of an altitude range in meters."@en ;
    rdfs:domain :PhysicalLocation ;
    rdfs:range xsd:decimal .

:altitude_meters a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "altitude (in meters)"@en ;
    rdfs:comment "An xsd:decimal defining an altitude in meters."@en ;
    rdfs:domain :PhysicalLocation ;
    rdfs:range xsd:decimal .

:altitude_upper_bound_meters a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "upper bound of an altitude range (in meters)"@en ;
    rdfs:comment "An xsd:decimal defining the upper bound of an altitude range in meters."@en ;
    rdfs:domain :PhysicalLocation ;
    rdfs:range xsd:decimal .

:amount a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "amount"@en ;
    rdfs:comment "A (double or decimal) value specifying the amount of a MonetaryAmount individual."@en ;
    rdfs:domain :MonetaryAmount ;
    rdfs:range [ a rdfs:Datatype ;
                 owl:unionOf ( xsd:decimal xsd:double ) ] .

:amount_text a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "amount text"@en ;
    rdfs:comment "A string providing information regarding the amount of a MonetaryAmount individual, when an exact value or range of values is not known. For example, it may be known that a MonetaryAmount involved a 'large sum of money'. In this case, the string would be associated with the MonetaryAmount individual using this property."@en ;
    rdfs:domain :MonetaryAmount ;
    rdfs:range xsd:string .

:beginning_hour_and_minute a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "beginning hour and minute"@en ;
    rdfs:comment "String defining the 2 digit hour and 2 digit minute (within a day) that is the beginning of a RecurrencePattern interval. The value must conform to the format, hh:mm, and use a 24 hour clock. This restriction will be validated using a constraint."@en ;
    rdfs:domain :RecurrencePattern ;
    rdfs:range [ a rdfs:Datatype ;
                 owl:onDatatype xsd:string ;
                 owl:withRestrictions ( [ xsd:pattern "^([01][0-9]|2[0123]):[0-5][0-9]$" ] ) ] .

:beginning_month_and_day a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "beginning month and day"@en ;
    rdfs:comment "String defining the 2 digit month and 2 digit day (within a year) that is the beginning of a RecurrencePattern interval. The value must conform to the format, mm-dd. This restriction will be validated using a constraint."@en ;
    rdfs:domain :RecurrencePattern ;
    rdfs:range [ a rdfs:Datatype ;
                 owl:onDatatype xsd:string ;
                 owl:withRestrictions ( [ xsd:pattern "^(0[1-9]|1[012])\\-(0[1-9]|[12][0-9]|3[01])$" ] ) ] .

:canonical_label a owl:DatatypeProperty ;
    rdfs:label "canonical label"@en ;
    rdfs:comment "A string defining a recognized or generally accepted name for an entity, such as a Person or Organization. For example, an Organization such as Amnesty International may have many names (its full text, just 'Amnesty', or its initials). However, the Organization is officially recognized as 'Amnesty International' and the other names are alternatives. This distinction is captured by defining the canonical_label of the Organization as 'Amnesty International' and specifying the other names using rdfs:label."@en ;
    rdfs:comment "Note that there should only be one canonical_label defined for an individual. However, if that label is specified in different languages, then more than one occurrence of the canonical_label property may be found."@en ;
    rdfs:range xsd:string ;
    rdfs:subPropertyOf rdfs:label .

:count a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "number in an implicit or explicit Collection"@en ;
    rdfs:comment "An xsd:integer indicating the number of members of an implicit or explicit Collection. An explicit Collection is an individual classified as a Collection (or one of its sub-classes). An implicit Collection is defined with a specific type/classification but NOT classified as a Collection. It is a short-hand mechanism to represent plurals of tangible entities (such as tanks). For example, '3 tanks' could be defined as a single individual with a type of cco:Tank and a count property of 3."@en ;
    rdfs:range xsd:integer .

:count_text a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "count text"@en ;
    rdfs:comment "A string providing information regarding the number of members of an implicit or explicit Collection, when an exact count or range is not known. For example, it may be known that 'scores of people were killed' in an event. In this case, the string could be associated with the Event individual using this property."@en ;
    rdfs:range xsd:string .

:day_of_month a owl:DatatypeProperty ;
    rdfs:label "day_of_month"@en ;
    rdfs:comment "day_of_month indicates occurrences that happen on a particular day of the month. For example, workers may be paid on the 15th and the last day of a month. Those days can be indicated by declaring two day_of_month property values for a RecurrencePattern individual. The values would be set to 15 and -1 (where a positive number counts from the beginning of the month and a negative number counts back from the end)."@en ;
    rdfs:domain :RecurrencePattern ;
    rdfs:range xsd:integer .

:earliest_possible_end_time a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "earliest possible end time"@en ;
    rdfs:comment "A dateTime specifying the earliest end time of an individual."@en ;
    rdfs:range xsd:dateTime .

:earliest_possible_start_time a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "earliest possible start time"@en ;
    rdfs:comment "A dateTime specifying the earliest start time of an individual."@en ;
    rdfs:range xsd:dateTime .

:ending_hour_and_minute a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "ending hour and minute"@en ;
    rdfs:comment "String defining the 2 digit hour and 2 digit minute (within a day) that is the end bound of a RecurrencePattern interval. The value must conform to the format, hh:mm, and use a 24 hour clock. This restriction will be validated using a constraint."@en ;
    rdfs:domain :RecurrencePattern ;
    rdfs:range [ a rdfs:Datatype ;
                 owl:onDatatype xsd:string ;
                 owl:withRestrictions ( [ xsd:pattern "^([01][0-9]|2[0123]):[0-5][0-9]$" ] ) ] .

:ending_month_and_day a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "ending month and day"@en ;
    rdfs:comment "String defining the 2 digit month and 2 digit day (within a year) that is the end bound of a RecurrencePattern interval. The value must conform to the format, mm-dd. This restriction will be validated using a constraint."@en ;
    rdfs:domain :RecurrencePattern ;
    rdfs:range [ a rdfs:Datatype ;
                 owl:onDatatype xsd:string ;
                 owl:withRestrictions ( [ xsd:pattern "^(0[1-9]|1[012])\\-(0[1-9]|[12][0-9]|3[01])$" ] ) ] .

:genc_character_code a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "geopolitical entities, names and codes (GENC) character code"@en ;
    rdfs:comment "Reference to a GENC (Geopolitical Entities, Names and Codes) character code which uniquely identifies a geopolitical region (as a 3 character code) or subdivision (as a 6 character code). The codes are defined by the NGA, accessible from https://nsgreg.nga.mil/doc/view?i=2507. In addition, a Python distribution is also available at https://github.com/hannosch/genc. A GENC character code identifies a PhysicalLocation or a geopolitical entity/Actor."@en ;
    rdfs:domain :PhysicalLocation ;
    rdfs:range xsd:string .

:generic a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "generic (boolean)"@en ;
    rdfs:comment "If true, identifies that an individual is a generic concept as opposed to a specific individual/group. For example, when making a generalization about 'all' refugees, then an individual of type, actor:Refugee, would be defined with a general:generic property of 'true'. Or, when maing a statement about the danger of guns, then an individual of type, cco:Firearm, would be defined with a general:generic property of 'true'. On the other hand, when referring to an unnamed group of refugees fleeing from Nigeria to Cameroon, that is still a specific GroupOfPersons with the additional classification of actor:Refugee."@en ;
    rdfs:range xsd:boolean .

:geoname_id a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "geoname id"@en ;
    rdfs:comment "Reference to a geoname id which uniquely identifies a location/locality in the Geonames database. Using a GET request and substituting the geoname id and your username in the following request, http://api.geonames.org/get?geonameId=geoname_id&username=username&style=SHORT, returns a great deal of information on the location/locality. A geoname identifies a PhysicalLocation or a geopolitical entity/Actor."@en ;
    rdfs:domain :PhysicalLocation ;
    rdfs:range xsd:string .

:identifier_key a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "Identifier key"@en ;
    rdfs:comment "A string specifying the semantics of the identifier. For example, an identifier key may be a 'country code', a 'MD state driver's license' id, a 'United States passport' id, etc."@en ;
    rdfs:domain :Identifier ;
    rdfs:range xsd:string .

:identifier_value a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "Identifier value"@en ;
    rdfs:comment "A string specifying the text value that 'identifies' an individual."@en ;
    rdfs:domain :Identifier ;
    rdfs:range xsd:string .

:ipV4Address a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "IPV4 address"@en ;
    rdfs:comment "A string defining an IPV4 address in dotted decimal format (e.g., 169.23.24.00)."@en ;
    rdfs:domain :NetworkLocation ;
    rdfs:range [ a rdfs:Datatype ;
                 owl:onDatatype xsd:string ;
                 owl:withRestrictions ( [ xsd:pattern "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$" ] ) ] .

:ipV6Address a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "IPV6 address"@en ;
    rdfs:comment "A string defining an IPV6 address using hexadecimals (e.g., ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff)."@en ;
    rdfs:domain :NetworkLocation ;
    rdfs:range [ a rdfs:Datatype ;
                 owl:onDatatype xsd:string ;
                 owl:withRestrictions ( [ xsd:pattern "^([A-Fa-f0-9]{4}:|0:|:){7}([A-Fa-f0-9]{4}|0)$" ] ) ] .

:largest_possible_amount a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "largest possible amount"@en ;
    rdfs:comment "A (double or decimal) value specifying the largest possible amount of a MonetaryAmount individual, when an exact value is not known."@en ;
    rdfs:domain :MonetaryAmount ;
    rdfs:range [ a rdfs:Datatype ;
                 owl:unionOf ( xsd:decimal xsd:double ) ] .

:latest_possible_end_time a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "latest possible end time"@en ;
    rdfs:comment "A dateTime specifying the latest end time of an individual."@en ;
    rdfs:range xsd:dateTime .

:latest_possible_start_time a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "latest possible start time"@en ;
    rdfs:comment "A dateTime specifying the latest start time of an individual."@en ;
    rdfs:range xsd:dateTime .

:latitude a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "latitude"@en ;
    rdfs:comment "An xsd:decimal defining a latitude in decimal degrees."@en ;
    rdfs:domain :PhysicalLocation ;
    rdfs:range xsd:decimal .

:location a owl:DatatypeProperty ;
    rdfs:label "location"@en ;
    rdfs:comment "A string giving a description of a Location individual. This is a different technique for defining the location than specifying a geoname, latitude/longitude, etc. When parsing text, it may be necessary to simply capture the text related to the location(s), without defining more specific details. Additional properties can be added to the Location individual at a later time."@en ;
    rdfs:range xsd:string .

:longest_possible_duration_milliseconds a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "longest possible duration in milliseconds"@en ;
    rdfs:comment "An unsigned long specifying the longest time extent/duration of an individual."@en ;
    rdfs:range xsd:unsignedLong .

:longitude a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "longitude"@en ;
    rdfs:comment "An xsd:decimal defining a longitude in decimal degrees."@en ;
    rdfs:domain :PhysicalLocation ;
    rdfs:range xsd:decimal .

:maximum_possible_count a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "maximum number in an implicit or explicit Collection"@en ;
    rdfs:comment "An xsd:integer indicating the maximum number of members of an implicit or explicit Collection, when an exact number is not known. An explicit Collection is an individual classified as a Collection (or one of its sub-classes). An implicit Collection is defined with a specific type/classification but NOT classified as a Collection. It is a short-hand mechanism to represent plurals of tangible entities (such as tanks). For example, 'at least 3 tanks' could be defined as a single individual with a type of cco:Tank and a maximum_possible_count property of 3."@en ;
    rdfs:range xsd:integer .

:minimum_possible_count a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "minimum number in an implicit or explicit Collection"@en ;
    rdfs:comment "An xsd:integer indicating the minimum number of members of an implicit or explicit Collection, when an exact number is not known. An explicit Collection is an individual classified as a Collection (or one of its sub-classes). An implicit Collection is defined with a specific type/classification but NOT classified as a Collection. It is a short-hand mechanism to represent plurals of tangible entities (such as tanks). For example, 'at most 3 tanks' could be defined as a single individual with a type of cco:Tank and a minimum_possible_count property of 3."@en ;
    rdfs:range xsd:integer .

:numeric_confidence a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "confidence level"@en ;
    rdfs:comment "A decimal value indicating the probability that the referenced individual is correct. The value must be in the range of 0.00-1.00."@en ;
    rdfs:comment "To map a qualitative confidence level (such as low-medium-high) to the  0.00-1.00 scale, it is recommended that the following values are used: 'no confidence' = 0.00, 'very low confidence' = 0.10, 'very low to low confidence' = 0.20, 'low confidence' = 0.3, 'low to medium confidence' = 0.40, 'medium confidence' = 0.50, 'medium to high confidence' = 0.60, 'high confidence' = 0.70, 'high to very high confidence' = 0.8, 'very high confidence' = 0.90, and 'total confidence' = 1.0."@en ;
    rdfs:range [ a rdfs:Datatype ;
                 owl:onDatatype xsd:decimal ;
                 owl:withRestrictions ( [ owl:minInclusive "0.00"^^xsd:decimal ]
                                        [ owl:maxInclusive "1.00"^^xsd:decimal ] ) ] .

:numeric_credibility a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "credibility"@en ;
    rdfs:comment "A decimal value indicating the probability that the refernced individual is believable/trust-worthy. The value must be in the range of 0.00-1.00."@en ;
    rdfs:comment "To map a qualitative credibility level (such as low-medium-high) to the  0.00-1.00 scale, it is recommended that the following values are used: 'no confidence' = 0.00, 'very low confidence' = 0.10, 'very low to low confidence' = 0.20, 'low confidence' = 0.3, 'low to medium confidence' = 0.40, 'medium confidence' = 0.50, 'medium to high confidence' = 0.60, 'high confidence' = 0.70, 'high to very high confidence' = 0.8, 'very high confidence' = 0.90, and 'total confidence' = 1.0."@en ;
    rdfs:range [ a rdfs:Datatype ;
                 owl:onDatatype xsd:decimal ;
                 owl:withRestrictions ( [ owl:minInclusive "0.00"^^xsd:decimal ]
                                        [ owl:maxInclusive "1.00"^^xsd:decimal ] ) ] .

:plural a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "plural (boolean) indicating an implicit Collection"@en ;
    rdfs:comment "An xsd:boolean defining whether an individual refers to one or multiple tangible objects. This is a mechanism to define an implicit Collection when a 'count' of the individuals in the Collection is not known. It is a short-hand mechanism to represent plurals of tangible entities (such as tanks). For example, 'multiple tanks' could be defined as a single individual with a type of cco:Tank and a plural property of 'true'. Using this property, an individual can identify that it is a plural even if the count is not known. Both plural and count properties can be defined, or only one or the other."@en ;
    rdfs:comment "Note also that the use of this property implies that the individual is classified using its explicit type (such as cco:Tank) and as a general:Collection."@en ;
    rdfs:range xsd:boolean .

:position_or_role a owl:DatatypeProperty ;
    rdfs:label "position or role"@en ;
    rdfs:comment "Indicates that the referenced individual (an Actor) has an organizational, political or military position, is employed in a certain occupation, or engages in certain activites. Examples of each of these are a Person being a 'shareholder' or 'owner' of a company, or holding the military rank of 'general'. Other examples are persons being a 'farmer', 'teacher' or 'police officer', or engaging in 'activist' or 'revolutionary' activities. The value of the role/position is currently defined as a free-form string, with the intent of analyzing the strings to define an approach for achieving a consistent set of values."@en ;
    rdfs:comment "In rare cases, position_or_role may be specified for an Event, indicating  that the referenced Event involves a position, such as an election Event for the position of 'President of the United States'."@en ;
    rdfs:range xsd:string .

:separation_interval a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "separation interval"@en ;
    rdfs:comment "A decimal specifying the time between occurrences for a RecurrencePattern individual. This time is relative to the individual's RecurrenceInterval. For example, if the RecurrenceInterval is minutes, and the separation interval is 10, then something occurs/recurs every 10 minutes. If a separation_interval is not specified, then a value of 1 is assumed."@en ;
    rdfs:domain :RecurrencePattern ;
    rdfs:range xsd:decimal .

:shortest_possible_duration_milliseconds a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "shortest possible duration in milliseconds"@en ;
    rdfs:comment "An unsigned long specifying the shortest time extent/duration of an individual."@en ;
    rdfs:range xsd:unsignedLong .

:smallest_possible_amount a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "smallest possible amount"@en ;
    rdfs:comment "A (double or decimal) value specifying the smallest possible amount of a MonetaryAmount individual, when an exact value is not known."@en ;
    rdfs:domain :MonetaryAmount ;
    rdfs:range [ a rdfs:Datatype ;
                 owl:unionOf ( xsd:decimal xsd:double ) ] .

:time a owl:DatatypeProperty ;
    rdfs:label "time "@en ;
    rdfs:comment "A string specifying a time or interval related to an individual. This is a different technique for defining time than using the earlist/lastest_possible_xxx properties. When parsing text, it may be valuable to simply capture the text related to the time (for example, a reference to the 'Elizabethan era' or to the 'time before the death of the president')."@en ;
    rdfs:range xsd:string .

:url a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "URL (Uniform Resource Locator)"@en ;
    rdfs:comment "A string defining a web address that uses the HTTP or HTTPS protocol."@en ;
    rdfs:domain :NetworkLocation ;
    rdfs:range xsd:string .

:week_of_month a owl:DatatypeProperty ;
    rdfs:label "week_of_month"@en ;
    rdfs:comment "week_of_month indicates occurrences that happen in a particular week of the month. For example, a meeting may occur on the first and last Fridays of a month. That can be indicated by setting a RecurrencePattern individual's has_day_of_week to Friday and also declaring two week_of_month property values, 1 and -1 (where a positive number counts from the beginning of the month and a negative number counts back from the end)."@en ;
    rdfs:domain :RecurrencePattern ;
    rdfs:range xsd:integer .


#################################################################
#    Classes
#################################################################

:Border a owl:Class ;
    rdfs:label "Border"@en ;
    rdfs:comment "Identifies a boundary between two geopolitical entities. Some borders correspond with physical features, and others are legal constructs mandated or established by agreement. Borders are sub-classes of VirtualLocations."@en ;
    rdfs:subClassOf :VirtualLocation .

:BoundingBox a owl:Class ;
    rdfs:label "Bounding Box"@en ;
    rdfs:comment "A polygonal region enclosed by the latitude/longitude coordinates/PhysicalLocations specified using the has_bounding_coordinate property. The use of latitude and longitude is specified by the Content Standard for Digital Geospatial Metadata, from the Federal Geographic Data Committee (FGDC), FGDC-STD-001-1998."@en ; 
    rdfs:subClassOf :PhysicalLocation .
#   owl:equivalentClass cco:GeospatialRegionBoundingBox .

:Collection a owl:Class ;
    rdfs:label "Collection"@en ;
    rdfs:comment "A group of things, whose members are defined using the has_member property."@en .

:Cryptocurrency a owl:Class ;
    rdfs:label "Cryptocurrency"@en ;
    rdfs:subClassOf cco:CurrencyUnit .

:DayOfWeek a owl:Class ;
    rdfs:label "Day of Week"@en ;
    rdfs:comment "An enumeration indicating the day of week (Sunday, Monday, ..., Saturday). This class is used with a RecurrencePattern individual to indicate a pattern that involves a specific day of the week. That day is associated with the RecurrencePattern individual using the has_day_of_week property."@en ;
    owl:equivalentClass [ a owl:Class ;
                          owl:oneOf ( :Sunday :Monday :Tuesday :Wednesday :Thursday :Friday :Saturday ) ] .

:Identifier a owl:Class ;
    rdfs:label "Identifier"@en ;
    rdfs:comment "An individual can have many different codes/ids/... to uniquely identify/distinguish it. Each code/id/.... can be captured as an entity of type, Identifier, whose identifier_key provides information on the what the identifier represents/the identifier's semantics (for example, social security number, driver's license id, country code, ...) and the identifier_value property defines the specific code/id/... The individual being distinguished is related to its Identifier using the has_identifier property. Note that the identifier_value is typically context-specific, based on the source document that specifies it. The source document is defined for an Identifier entity using the Data Provenance ontology's sourced_from property."@en .

:IndividualClassification a owl:Class ;
    rdfs:label "Individual Classification"@en ;
    rdfs:comment "The semantics of IndividualClassification provide an alternative to simply classifying an individual using the most general event:Event, event:Actor or general:Location class, when there is some ambiguity or uncertainty regarding the explicit sub-class to be used. The ambiguity may be due to the words used, due to a lack of information, or because the semantics actually overlap several different sub-classes (as may occur with TimeSeries data or other CollectionsOfEvents). One way to resolve this is to classify the individual as a blank node that is a union of the possible types. But, this approach does not allow for specifying uncertainty or the preferred classification. Using IndividualClassification, an individual may be classified as one of a number of different types, with different confidences."@en ;
    rdfs:comment "The individual whose semantics are ambiguous would be formally classified using a generic event:Event, event:Actor or general:Location type and would be referenced by two or more IndividualClassification instances (using the is_classified_individual property). The possible, more specific classifications would be referenced using the is_possible_classification_ref property or its sub-properties, is_positive_classification_ref and is_negative_classification_ref."@en ;
    rdfs:comment "An example is needed to illustrate the concept. Assume that a location of Niger is encountered in text. That location could be the country of Niger, or it could be the state of Niger in Nigeria. This could be indicated by classifying the Niger individual as a general:PhysicalLocation and defining two IndividualClassification instances. These might be :CountryOfNigerClassification and :CityOfNigerNigeriaClassification. The latter two individuals would reference the Niger individual using the is_classified_individual property. The first would also reference cco:Country using the is_possible_classification_ref and the second would reference cco:State using that property. There might be two different confidences assigned to these, based on other information in the text. The confidences would be associated with the IndividualClassification instances using general:numeric_confidence."@en ;
    rdfs:comment "Another example is a TimeSeries reporting 'investment in water and sanitation with private participation'. This might be classified as supporting or negating any of the following Event sub-classes, PromotionOfWaterSanitationAndHygiene, WaterSecurity, WaterInsecurity, SanitaryConditions, UnsanitaryConditions, ContaminatedWater, WaterManagementLandUse or InfrastructureAndUtilities, depending on the need. In this case, not all of the relationships are positive/supporting. For example, the TimeSeries ClassificationIndividual would reference WaterInsecurity, UnsanitaryConditions and ContaminatedWater using the is_negative_classification_ref property, while the other classes would be referenced using is_positive_classification_ref. Each possible classification could have its own confidence."@en .

:Location a owl:Class ;
    rdfs:label "Location"@en ;
    rdfs:comment "Identifies a point or area on the Earth’s surface, or in a virtual/network space. Location is a general concept with sub-classes defining more specific types of locations as localities (for example, physical locations using geonames or latitude-longitude definitions), or network locations."@en .

:LocationDetails a owl:Class ;
    rdfs:label "Location Details"@en ;
    rdfs:comment "Identifies that something is inferred to have a specific Location, with some probability/confidence. Individuals of this class reify placing something at/near a Location. The reification is needed in order to add the general:numeric_confidence property. The confidence in the Location is defined by associating located_at/near with a LocationDetails instance (instead of directly associating it with the Location). The LocationDetails individual in turn references the Location (using the related_location property) and includes a value for the general:numeric_confidence property."@en .

:MonetaryAmount a owl:Class ;
    rdfs:label "Monetary Amount"@en ;
    rdfs:comment "An individual indicating that a monetary value was/is involved in/associated with an individual. The details of the value are specified using the properties, amount (a decimal value indicating that an exact amount is known), smallest/largest_possible_amount (decimal values indicating that a minimum, maximum or range of values is known) or amount_text (a string indicating that only qualitative information about the amount is known). Also, the property, has_currency, is defined to indicate the monies' currency. has_currency references an individual of type, cco:CurrencyUnit, as its range. None of the properties are required."@en .

:NetworkLocation a owl:Class ;
    rdfs:label "Network Location"@en ;
    rdfs:comment "Identifies a network location either as an IPV4 or IPV6 address or as an URI."@en ;
    rdfs:subClassOf :VirtualLocation .

:PathRoadOrRoute a owl:Class ;
    rdfs:label "Path, Road or Route"@en ;
    rdfs:comment "Identifies a thoroughfare, road, way, ... for vehicles, persons, animals, cargo transportation, etc."@en ;
    rdfs:subClassOf :PhysicalLocation .

:PhysicalLocation a owl:Class ;
    rdfs:label "Physical Location"@en ;
    rdfs:comment "Identifies a point or area on or near the Earth’s surface. PhysicalLocation is a general concept with properties defining geoname and GENC locations, and/or altitude-latitude-longitude settings. In addition, a PhysicalLocation is defined as equivalent to CCO's GeospatialRegion and EnvironmentalFeature, as well as the CCO Artifact Ontology' Infrastructure and Facility classes. Sub-classes of these CCO types can be used to further classify a PhysicalLocation individual, which then adds that semantic to the individual."@en ;
    rdfs:comment "Note that the CCO Artifact Ontology's ArtifactLocation is also defined as equivalent to PhysicalLocation. This is done for completeness since the definition of ArtifactLocation is simply 'the location of some Artifact'. That is what is impled by subtyping cco:Infrastructure and cco:Facility from PhysicalLocation."@en;
    rdfs:subClassOf :Location ;
    owl:equivalentClass [ a owl:Class ;
                          owl:unionOf ( cco:GeospatialRegion cco:EnvironmentalFeature cco:Facility cco:Infrastructure ) ] .
cco:Continent rdfs:subClassOf :PhysicalLocation .
cco:GeopoliticalEntity rdfs:subClassOf :PhysicalLocation .
cco:GeopoliticalEntityPart rdfs:subClassOf :PhysicalLocation .
cco:EnvironmentalFeature rdfs:subClassOf :PhysicalLocation .
cco:SeaLevel rdfs:subClassOf :PhysicalLocation .
cco:Subcontinent rdfs:subClassOf :PhysicalLocation .
cco:Facility rdfs:subClassOf :PhysicalLocation .
cco:Infrastructure rdfs:subClassOf :PhysicalLocation .
# cco:ArtifactLocation rdfs:subClassOf :PhysicalLocation .

:RecurrencePattern a owl:Class ;
    rdfs:label "Recurrence Pattern"@en ;
    rdfs:comment "Reifies information defining a recurring time interval. The recurrence pattern is based on a closed enumeration identifying either minutes, hourly, daily, weekly, monthly or yearly (indicated by the RecurrenceInterval), further constrained by the beginning/ending_month_and_day, beginning/ending_hour_and_minute, has_day_of_week, week/day_of_month and/or separation_interval properties."@en ;
    rdfs:comment "An example is to describe a recurring pattern of every other Saturday from June 1 to September 1, every year starting in 2016. This is defined by specifying an earliest_possible_start_time for an individual ('2016-06-01T00:00:00') and also associating (via the 'recurs' property) a RecurrencePattern instance whose RecurrenceInterval is weekly, separation_interval is 2 (e.g., 2 weeks between occurrences), day of week is Saturday, beginning_month_and_day is '06-01', and ending_month_and_day is '09-01'."@en ;
    rdfs:comment "Other examples are to define a recurring pattern of the first and last Friday of every month, or every year on Dec 25th. The first example is defined by creating a RecurrencePattern individual where the RecurrenceInterval is monthly, the day of week is Friday, and two week_of_month values are defined, 1 and -1 (negative indicates that the Friday is determined from the end of the month). The second example is defined by creating an individual where the RecurrenceInterval is yearly and the beginning/ending_month_and_day are '12-25'."@en ;
    rdfs:comment "A last example is to define a recurring pattern of every 15 minutes, from 8am to 5pm, Monday-Friday. This would be specified by creating a RecurrencePattern individual where the RecurrenceInterval is minutes, the beginning and ending hour and minute is 08:00 and 17:00 (respectively), the separation interval is 15, and 5 days of the week are referenced - Monday, Tuesday, Wednesday, Thursday and Friday."@en .

:RecurrenceInterval a owl:Class ;
    rdfs:label "Recurrence Interval"@en ;
    rdfs:comment "An enumeration indicating whether something occurs/recurs on an interval of Minutes, Hourly, Daily, Weekly, Monthly or Yearly. A RecurrenceInterval individual is associated with a RecurrencePattern instance using the has_recurrence_interval property."@en ;
    owl:equivalentClass [ a owl:Class ;
                          owl:oneOf ( :Minutes :Hourly :Daily :Weekly :Monthly :Yearly ) ] .

:ShortenedHierarchy a owl:Class ;
    rdfs:label "Shortened Location hierarchy"@en ;
    rdfs:comment "Class created to artifically shorten the number of subclasses from :Location. For example, the cco:ControlledAccessHighway class is 6 levels deep in the Location hierarchy (ControlledAccessHighway -> Highway -> Road -> TransportationInfrastructure -> Infrastructure -> PhysicalLocation -> Location). When this is sub-classed from ShortenedHierarchy, the number of levels is reduced to 2 (ControlledAccessHighway -> ShortenedHierarchy -> Location). This is done to allow the workarounds for rdfs:subClassOf* errors in Virtuoso."@en ;
    rdfs:subClassOf :Location .
cco:CellularTelecommunicationNetwork rdfs:subClassOf :ShortenedHierarchy .
cco:ControlledAccessHighway rdfs:subClassOf :ShortenedHierarchy .

:Territory a owl:Class ;
    rdfs:label "Territory, municipality or dependency"@en ;
    rdfs:comment "Identifies an 'overseas' administrative part of a country."@en ;
    rdfs:subClassOf :PhysicalLocation .

:VirtualLocation a owl:Class ;
    rdfs:label "Virtual Location"@en ;
    rdfs:comment "Identifies a virtual/network location. VirtualLocation is a general concept with properties defining IP V4 or V6 locations and URLs."@en ;
    rdfs:subClassOf :Location .


#################################################################
#    Individuals
#################################################################

:Daily a owl:NamedIndividual, :RecurrenceInterval ;
    rdfs:label "Daily"@en .

:Friday a owl:NamedIndividual, :DayOfWeek ;
    rdfs:label "Friday"@en .

:Hourly a owl:NamedIndividual, :RecurrenceInterval ;
    rdfs:label "Hourly"@en .

:Minutes a owl:NamedIndividual, :RecurrenceInterval ;
    rdfs:label "Minutes"@en .

:Monday a owl:NamedIndividual, :DayOfWeek ;
    rdfs:label "Monday"@en .

:Monthly a owl:NamedIndividual, :RecurrenceInterval ;
    rdfs:label "Monthly"@en .

:Saturday a owl:NamedIndividual, :DayOfWeek ;
    rdfs:label "Saturday"@en .

:Sunday a owl:NamedIndividual, :DayOfWeek ;
    rdfs:label "Sunday"@en .

:Thursday a owl:NamedIndividual, :DayOfWeek ;
    rdfs:label "Thursday"@en .

:Tuesday a owl:NamedIndividual, :DayOfWeek ;
    rdfs:label "Tuesday"@en .

:Wednesday a owl:NamedIndividual, :DayOfWeek ;
    rdfs:label "Wednesday"@en .

:Weekly a owl:NamedIndividual, :RecurrenceInterval ;
    rdfs:label "Weekly"@en .

:Yearly a owl:NamedIndividual, :RecurrenceInterval ;
    rdfs:label "Yearly"@en .

_:diff1 rdf:type owl:AllDifferent ; 
    owl:members ( :Minutes :Hourly :Daily :Weekly :Monthly :Yearly 
                  :Sunday :Monday :Tuesday :Wednesday :Thursday :Friday :Saturday ) .
